name: CI
on: 
    push:
      branches:
        - master
    pull_request:
    schedule:
        - cron: '0 4 * * 6' # Every Saturday on 4am

jobs:
    psalm:
        name: Static analysis
        runs-on: ubuntu-20.04
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Set up PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.1'
                  tools: composer:v2
                  coverage: none
              env:
                  fail-fast: true

            - name: Get Composer Cache Directories
              id: composer-cache
              run: |
                  echo "files_cache=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
                  echo "vcs_cache=$(composer config cache-vcs-dir)" >> $GITHUB_OUTPUT

            - name: Retrieve cached packages
              uses: actions/cache@v3
              with:
                  path: |
                    ${{ steps.composer-cache.outputs.files_cache }}
                    ${{ steps.composer-cache.outputs.vcs_cache }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                    ${{ runner.os }}-composer-

            - name: Install composer dependencies
              run: composer update --prefer-dist
              env:
                  COMPOSER_ROOT_VERSION: dev-master

            - name: Run Psalm
              run: vendor/bin/psalm --output-format=github --shepherd

    phpcs:
        name: Code style
        runs-on: ubuntu-20.04
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Set up PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.1'
                  tools: composer:v2, cs2pr
                  coverage: none
              env:
                  fail-fast: true

            - name: Get Composer Cache Directories
              id: composer-cache
              run: |
                  echo "files_cache=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
                  echo "vcs_cache=$(composer config cache-vcs-dir)" >> $GITHUB_OUTPUT

            - name: Retrieve cached packages
              uses: actions/cache@v3
              with:
                  path: |
                    ${{ steps.composer-cache.outputs.files_cache }}
                    ${{ steps.composer-cache.outputs.vcs_cache }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                    ${{ runner.os }}-composer-

            - name: Install composer dependencies
              run: composer update --prefer-dist
              env:
                  COMPOSER_ROOT_VERSION: dev-master

            - name: Run PHPCodeSniffer
              run: vendor/bin/phpcs --report=checkstyle -q --parallel=1 | cs2pr

    test-static-analysis:
        name: Run static analysis on the tests themselves
        runs-on: ubuntu-latest
        
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Set up PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.2
                  tools: composer:v2
                  coverage: none
                  extensions: intl, mbstring, bcmath, sodium
              env:
                  fail-fast: true

            - name: Install composer dependencies (high deps)
              run: cd tools/behat && composer install

            - name: Static analysis
              run: cd tools/behat && vendor/bin/psalm

    tests:
        name: Test on ${{matrix.php}} - ${{matrix.deps}} deps
        runs-on: ubuntu-20.04
        continue-on-error: ${{matrix.php == '8.0'}}
        strategy:
            matrix:
                php: ['8.1', '8.2', '8.3', '8.4']
                deps: ['high', 'low', 'stable']
                exclude:
                  - php: 8.4
                    deps: low
            fail-fast: false
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Set up PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{matrix.php}}
                  tools: composer:v2
                  coverage: none
              env:
                  fail-fast: true

            - name: Get Composer Cache Directories
              id: composer-cache
              run: |
                  echo "files_cache=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
                  echo "vcs_cache=$(composer config cache-vcs-dir)" >> $GITHUB_OUTPUT

            - name: Retrieve cached packages
              uses: actions/cache@v3
              with:
                  path: |
                    ${{ steps.composer-cache.outputs.files_cache }}
                    ${{ steps.composer-cache.outputs.vcs_cache }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                    ${{ runner.os }}-composer-

            - name: Install composer dependencies (high deps)
              run: composer update --prefer-dist --no-interaction
              if: ${{matrix.deps == 'high'}}
              env:
                  COMPOSER_ROOT_VERSION: dev-master

            - name: Install composer tool dependencies (high deps)
              run: cd tools/behat && composer update --prefer-dist --no-interaction
              if: ${{matrix.deps == 'high'}}
              env:
                  COMPOSER_ROOT_VERSION: dev-master

            - name: Install composer dependencies (low deps)
              run: composer update --prefer-dist --no-interaction --prefer-stable --prefer-lowest
              if: ${{matrix.deps == 'low'}}
              env:
                  COMPOSER_ROOT_VERSION: dev-master

            - name: Install composer tool dependencies (low deps)
              run: cd tools/behat && composer update --prefer-dist --no-interaction --prefer-stable --prefer-lowest
              if: ${{matrix.deps == 'low'}}
              env:
                  COMPOSER_ROOT_VERSION: dev-master

            - name: Install composer dependencies (stable deps)
              run: composer update --prefer-dist --no-interaction --prefer-stable
              if: ${{matrix.deps == 'stable'}}
              env:
                  COMPOSER_ROOT_VERSION: dev-master

            - name: Install composer tool dependencies (stable deps)
              run: cd tools/behat && composer update --prefer-dist --no-interaction --prefer-stable
              if: ${{matrix.deps == 'stable'}}
              env:
                  COMPOSER_ROOT_VERSION: dev-master

            - name: Show Psalm version
              run: vendor/bin/psalm --version

            - name: Run tests
              run: cd tools/behat && vendor/bin/behat -vvv
